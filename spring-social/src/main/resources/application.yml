spring:
    datasource:
        url: jdbc:h2:mem:testdb
        username: sa
        password: password
        driverClassName: org.h2.Driver

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.H2Dialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 95005436432-obbb36j1rfeiu5ar548ol8pjggreq520.apps.googleusercontent.com
              clientSecret: exKT8hxHWlceIJpdHI3VJX4e
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
app:
  auth:
    tokenSecret: PRACOWNIAPROGRAMOWANIA
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect